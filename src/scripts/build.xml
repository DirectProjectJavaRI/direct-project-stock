<project name="install" default="assemble" basedir=".">
	<description>
	    Install the apache-james mail server for use with the Direct Project
	</description>
	
	<!-- check the os -->
	<condition property="is.windows">
		<os family="windows"></os>
	</condition>
	<condition property="is.unix">
		<and>
			<os family="unix"></os>
			<not>
				<os family="mac"></os>
			</not>
		</and>
	</condition>
	<condition property="is.mac">
		<and>
			<os family="unix"></os>
			<os family="mac"></os>
		</and>
	</condition>
	<condition property="is.someunix">
		<os family="unix"></os>
	</condition>
	
	<!-- set global properties for this build -->
	
	<property environment="env"></property>
	<property name="install.root.dir" value="${env.DIRECT_INSTALL_CD}"></property>
	
	<property name="src" value="${install.root.dir}/src"></property>
	<property name="resources.dir" value="${src}/main/resources"></property>
	<property name="build.dir" value="${install.root.dir}/build"></property>
	<property name="build.download.dir" value="${build.dir}/download"></property>

	<property name="apache.james3.binary.url" value="https://archive.apache.org/dist/james/server/3.2.0/james-jpa-guice-3.2.0.zip"></property>
	<property name="apache.james3.binary.zip" value="${build.download.dir}/james-jpa-guice-3.2.0.zip"></property>	

	<property name="james3.stage.dir" value="${env.DIRECT_INSTALL_DIR}/james-jpa-guice-3.2.0"></property>
	<property name="james3.stage.conf.dir" value="${james3.stage.dir}/conf"></property>
	<property name="james3.stage.domainlist" value="${james3.stage.conf.dir}/domainlist.xml"></property>
	<property name="james3.stage.mailetcontainer" value="${james3.stage.conf.dir}/mailetcontainer.xml"></property>
	<property name="james3.stage.pop3server" value="${james3.stage.conf.dir}/pop3server.xml"></property>	
	<property name="james3.stage.imapserver" value="${james3.stage.conf.dir}/imapserver.xml"></property>	
	<property name="james3.stage.smtpserver" value="${james3.stage.conf.dir}/smtpserver.xml"></property>		
	<property name="james3.stage.keystore" value="${james3.stage.conf.dir}/keystore"></property>	
	<property name="james3.stage.logback" value="${james3.stage.conf.dir}/logback.xml"></property>		
	<property name="james3.stage.lib.dir" value="${james3.stage.dir}/james-server-jpa-guice.lib"></property>
	
	<!-- tomcat properties -->
	<property name="tomcat.binary.url" value="https://downloads.apache.org/tomcat/tomcat-9/v9.0.107/bin/apache-tomcat-9.0.107.tar.gz"></property>
	<property name="tomcat.binary.zip" value="${build.download.dir}/apache-tomcat-9.0.107.tar.gz"></property>
	<property name="tomcat.stage.dir" value="${env.DIRECT_INSTALL_DIR}/apache-tomcat-9.0.107"></property>
	<property name="tomcat.webapp.dir" value="${tomcat.stage.dir}/webapps"></property>
	<property name="tomcat.bin.dir" value="${tomcat.stage.dir}/bin"></property>	
	<property name="dnsservices.stage.dir" value="${env.DIRECT_INSTALL_DIR}/DirectDNSServer"></property>
	<property name="configmgmr.stage.dir" value="${env.DIRECT_INSTALL_DIR}/ConfigMgmtConsole"></property>
	
	<property name="maven.repo" value="${env.HOME}/.m2/repository"></property>
	
	<!-- Config server files -->
	<property name="config.root" value="${config.root}/../config"></property>
	<property name="config.service.dir" value="${config.root}/config-service/target"></property>
	<property name="config.service.orig.war" value="config-service-war-8.1.0.war"></property>
	<property name="config.service.dest.war" value="config-service.war"></property>
	<property name="config.ui.dir" value="${config.root}/config-ui/target"></property>
	<property name="config.ui.orig.war" value="config-ui-8.1.0.war"></property>
	<property name="config.ui.dest.war" value="config-ui.war"></property>

	<!-- xd server files -->
	<property name="xd.root" value="${config.root}/../xd"></property>
	<property name="xd.service.dir" value="${config.root}/xd/target"></property>
	<property name="xd.service.orig.war" value="xd-8.1.0.war"></property>
	<property name="xd.service.dest.war" value="xd.war"></property>
	
	
	<!-- message monitor server files -->
	<property name="msg-monitor.root" value="${config.root}/../msg-monitor"></property>
	<property name="msg-monitor.service.dir" value="${config.root}/msg-monitor/target"></property>
	<property name="msg-monitor.service.orig.war" value="direct-msg-monitor-web-8.1.0.war"></property>
	<property name="msg-monitor.service.dest.war" value="msg-monitor.war"></property>
	
	
	<!-- Support libraries -->
	<property name="lib.bcmail-jdk18" value="${install.root.dir}/lib/bcmail-jdk18on-1.81.jar"></property>
	<property name="lib.bcprov-jdk18" value="${install.root.dir}/lib/bcprov-jdk18on-1.81.jar"></property>
	<property name="lib.commons-io" value="${install.root.dir}/lib/commons-io-2.8-0.jar"></property>
	<property name="lib.commons-logging" value="${install.root.dir}/lib/commons-logging-1.1.jar"></property>
	<property name="lib.commons-lang" value="${install.root.dir}/lib/commons-lang-2.6.jar"></property>	
	<property name="lib.mail" value="${install.root.dir}/lib/javax.mail-1.6.2.jar"></property>
	<property name="lib.dsn" value="${install.root.dir}/lib/dsn-1.6.7.jar"></property>			
	<property name="lib.jdom" value="${install.root.dir}/lib/jdom-1.1.3.jar"></property>		
	<property name="lib.spring-aop" value="${install.root.dir}/lib/spring-aop-5.3.8.jar"></property>	
	<property name="lib.spring-beans" value="${install.root.dir}/lib/spring-beans-5.3.8.jar"></property>	
	<property name="lib.spring-core" value="${install.root.dir}/lib/spring-core-5.3.8.jar"></property>
	<property name="lib.spring-context" value="${install.root.dir}/lib/spring-context-5.3.8.jar"></property>
	<property name="lib.spring-expression" value="${install.root.dir}/lib/spring-expression-5.3.8.jar"></property>		
	<property name="lib.commons-collections" value="${install.root.dir}/lib/commons-collections-4.4.jar"></property>		
	<property name="lib.feign-core" value="${install.root.dir}/lib/feign-core-10.12.jar"></property>		
	<property name="lib.feign-form" value="${install.root.dir}/lib/feign-form-3.8.0.jar"></property>	
	<property name="lib.feign-form-spring" value="${install.root.dir}/lib/feign-form-spring-3.8.0.jar"></property>	
	<property name="lib.feign-slf4j" value="${install.root.dir}/lib/feign-slf4j-10.12.jar"></property>	
	<property name="lib.spring-cloud-openfeign-core" value="${install.root.dir}/lib/spring-cloud-openfeign-core-3.0.3.jar"></property>		
	<property name="lib.spring-cloud-commons" value="${install.root.dir}/lib/spring-cloud-commons-3.0.3.jar"></property>		
	<property name="lib.spring-cloud-config-client" value="${install.root.dir}/lib/spring-cloud-config-client-3.0.4.jar"></property>			
	<property name="lib.spring-cloud-context" value="${install.root.dir}/lib/spring-cloud-context-3.0.3.jar"></property>		
	<property name="lib.spring-cloud-stream" value="${install.root.dir}/lib/spring-cloud-stream-3.1.3.jar"></property>		
	<property name="lib.spring-boot" value="${install.root.dir}/lib/spring-boot-2.5.2.jar"></property>
	<property name="lib.spring-boot-actuator" value="${install.root.dir}/lib/spring-boot-actuator-2.5.2.jar"></property>
	<property name="lib.spring-boot-autoconfigure" value="${install.root.dir}/lib/spring-boot-autoconfigure-2.5.2.jar"></property>
	<property name="lib.spring-retry" value="${install.root.dir}/lib/spring-retry-1.3.1.jar"></property>	
	<property name="lib.spring-web" value="${install.root.dir}/lib/spring-web-5.3.8.jar"></property>	
	<property name="lib.dnsjava" value="${install.root.dir}/lib/dnsjava-3.4.0.jar"></property>
	
	<!-- Support libraries (DNS) -->
	<property name="lib.jcs" value="${install.root.dir}/lib/jcs-1.3.jar"></property>
	<property name="lib.concurrent" value="${install.root.dir}/lib/concurrent-1.0.jar"></property>

	<!-- Support libraries (config-service) -->
	<property name="lib.config.proxy" value="${install.root.dir}/lib/config-service-client-8.1.0.jar"></property>
	<property name="lib.config-model" value="${install.root.dir}/lib/config-model-8.1.0.jar"></property>
	
	<!-- Package libraries -->
	<property name="agent.dir" value="${install.root.dir}/../agent"></property>
	<property name="gateway.dir" value="${install.root.dir}/../gateway"></property>
	<property name="direct-common.dir" value="${install.root.dir}/../direct-common"></property>	
	<property name="direct-common-audit.dir" value="${install.root.dir}/../direct-common-audit"></property>		
	<property name="direct-msg-monitor-client.dir" value="${install.root.dir}/../direct-msg-monitor-client"></property>			
	<property name="direct-msg-monitor-model.dir" value="${install.root.dir}/../direct-msg-monitor-model"></property>			
	<property name="xdmail.dir" value="${install.root.dir}/../xdmail"></property>
	<property name="xd-common.dir" value="${install.root.dir}/../xd-common"></property>	
	<property name="lib.agent" value="${install.root.dir}/lib/agent-8.1.0.jar"></property>
	<property name="lib.gateway" value="${install.root.dir}/lib/gateway-8.1.0.jar"></property>
	<property name="lib.direct-common" value="${install.root.dir}/lib/direct-common-8.1.0.jar"></property>	
	<property name="lib.direct-msg-monitor-client" value="${install.root.dir}/lib/direct-msg-monitor-client-8.1.0.jar"></property>	
	<property name="lib.direct-msg-monitor-model" value="${install.root.dir}/lib/direct-msg-monitor-model-8.1.0.jar"></property>		
	<property name="lib.direct-common-audit" value="${install.root.dir}/lib/direct-common-audit-8.1.0.jar"></property>		
	<property name="lib.xdmail" value="${install.root.dir}/lib/xdmail-8.1.0.jar"></property>
	<property name="lib.xd-common" value="${install.root.dir}/lib/xd-common-8.1.0.jar"></property>
	<property name="lib.policy" value="${install.root.dir}/lib/direct-policy-8.1.0.jar"></property>		
	
	<!-- Stylesheet to edit the config file -->
	<property name="edit.config.stylesheet" value="${src}/scripts/edit-config.xsl"></property>

	<!-- Stylesheet to edit server.xml for tomcat configuration -->
	<property name="edit.tomcat.stylesheet" value="${src}/scripts/edit-tomcat.xsl"></property>
	
	<target name="windows-specific" if="is.windows">
		<echo message="src is ${src}"></echo>
		<property name="wget.command.path" value="${resources.dir}/wget.exe"></property>
	</target>
	
	<target name="unix-specific" if="is.unix">
		<property name="wget.command.path" value="/usr/bin/wget"></property>
	</target>
	
	<target name="mac-specific" if="is.mac">
		<!--
		<exec executable="which" outputproperty="wget.command.path" resultproperty="which.wget.result">
			<arg line="wget" />
		</exec>
		-->
		<property name="which.wget.result" value="1"></property>
		
		<exec executable="which" outputproperty="curl.command.path" resultproperty="which.curl.result" failonerror="false">
			<arg line="curl"></arg>
		</exec>
		
		<!-- do we have a downloader? -->
		<condition property="no.downloader">
			<and>
				<not>
					<equals arg1="${which.wget.result}" arg2="0"></equals>
				</not>
				<not>
					<equals arg1="${which.curl.result}" arg2="0"></equals>
				</not>
			</and>
		</condition>
	</target>
	
	<!-- Fail if we can't find a downloader command -->
	<target name="fail-if-no-downloader" if="no.downloader">
		<echo message="which.curl.result = ${which.curl.result}"></echo>
		<echo message="which.wget.result = ${which.wget.result}"></echo>
		<fail message="No downloader available - install wget or curl"></fail>
	</target>
	
	<target name="init" depends="windows-specific,unix-specific,mac-specific,fail-if-no-downloader">
		<!-- Create the time stamp -->
	    <tstamp></tstamp>
 	</target>

	<target name="assemble" depends="init" description="assemble the apache james mail server">
	    
		<!-- Create the build directory structure -->

		<mkdir dir="${build.dir}"></mkdir>
		<mkdir dir="${build.download.dir}"></mkdir>
		<fail unless="env.DIRECT_INSTALL_DIR" message="Environment variable DIRECT_INSTALL_DIR is not set"></fail>

		<!-- get the apache james 3 binary install package -->
		<available file="${apache.james3.binary.tar.gz}" property="apache.james3.download.exists"></available>
		<antcall target="get-james3"></antcall>		
		
		
		<!-- get the tomcat binary install package -->
		<available file="${tomcat.binary.zip}" property="tomcat.download.exists"></available>
		<antcall target="get-tomcat"></antcall>
		
		<!-- unpack -->
		<delete dir="${james.stage3.dir}"></delete>		
		<delete dir="${tomcat.stage.dir}"></delete>
		<untar compression="gzip" dest="${env.DIRECT_INSTALL_DIR}" src="${tomcat.binary.zip}"></untar>
		<unzip dest="${env.DIRECT_INSTALL_DIR}" src="${apache.james3.binary.zip}"></unzip>
				
		<!-- configure james -->
		<antcall target="configure"></antcall>
		<antcall target="make-shell-files-executable"></antcall>
		<antcall target="clean"></antcall>
	</target>


	<!-- get apache-james3 -->
	<target name="get-james3" depends="get-james3-get" unless="apache.james3.download.exists"></target>
	
	
	<!-- get james3 get -->
	<target name="get-james3-get" unless="apache.james3.download.exists">
        <echo>downloading ${apache.james3.binary.url}</echo>
        <mkdir dir="${build.download.dir}"/>
        <get src="${apache.james3.binary.url}" dest="${build.download.dir}" ignoreerrors="false" retries="5"/>
	</target>	
	
	<!-- get tomcat -->
	<target name="get-tomcat" depends="get-tomcat-get" unless="tomcat.download.exists"></target>
	
	<!-- get tomcat get -->
	<target name="get-tomcat-get" unless="tomcat.download.exists">
        <echo>downloading ${tomcat.binary.url}</echo>
        <mkdir dir="${build.download.dir}"/>
        <get src="${tomcat.binary.url}" dest="${build.download.dir}" ignoreerrors="false" retries="5"/>

	</target>

	<target name="configure" depends="configure-james3,configure-tomcat,configure-dns,configure-mgmt-console"></target>


	<target name="configure-james3">
		
		<!-- delete the template files that aren't needed -->
		<delete file="${james3.stage.conf.dir}/domainlist-template.xml"></delete>
		<delete file="${james3.stage.conf.dir}/mailetcontainer-template.xml"></delete>
		<delete file="${james3.stage.conf.dir}/pop3server-template.xml"></delete>
	    <delete file="${james3.stage.conf.dir}/imapserver-template.xml"></delete>
	    <delete file="${james3.stage.conf.dir}/smtpserver-template.xml"></delete>		
		
		<!-- make the directory for the james properties files -->
		<mkdir dir="${james3.stage.lib.dir}/properties"></mkdir>
		
		<!-- populate new libraries -->
		<copy file="${lib.bcmail-jdk18}" todir="${james3.stage.lib.dir}"></copy>
		<copy file="${lib.bcprov-jdk18}" todir="${james3.stage.lib.dir}"></copy>
		<copy file="${lib.dsn}" todir="${james3.stage.lib.dir}"></copy>		
		<copy file="${lib.agent}" todir="${james3.stage.lib.dir}"></copy>
		<copy file="${lib.gateway}" todir="${james3.stage.lib.dir}"></copy>
		<copy file="${lib.direct-common}" todir="${james3.stage.lib.dir}"></copy>			
		<copy file="${lib.direct-common-audit}" todir="${james3.stage.lib.dir}"></copy>	
		<copy file="${lib.direct-msg-monitor-client}" todir="${james3.stage.lib.dir}"></copy>	
		<copy file="${lib.direct-msg-monitor-model}" todir="${james3.stage.lib.dir}"></copy>			
		<copy file="${lib.xdmail}" todir="${james3.stage.lib.dir}"></copy>
		<copy file="${lib.xd-common}" todir="${james3.stage.lib.dir}"></copy>		
		<copy file="${lib.policy}" todir="${james3.stage.lib.dir}"></copy>		
		<copy file="${lib.jcs}" todir="${james3.stage.lib.dir}"></copy>
		<copy file="${lib.concurrent}" todir="${james3.stage.lib.dir}"></copy>
	    <copy file="${lib.config.proxy}" todir="${james3.stage.lib.dir}"></copy>
	    <copy file="${lib.config-model}" todir="${james3.stage.lib.dir}"></copy>							
	    <copy file="${lib.jdom}" todir="${james3.stage.lib.dir}"></copy>						
		<copy file="${lib.spring-aop}" todir="${james3.stage.lib.dir}"></copy>	
		<copy file="${lib.spring-beans}" todir="${james3.stage.lib.dir}"></copy>	
		<copy file="${lib.spring-context}" todir="${james3.stage.lib.dir}"></copy>			
		<copy file="${lib.spring-core}" todir="${james3.stage.lib.dir}"></copy>	
		<copy file="${lib.spring-expression}" todir="${james3.stage.lib.dir}"></copy>	
		<copy file="${lib.dnsjava}" todir="${james3.stage.lib.dir}"></copy>	
		
		<copy file="${lib.feign-core}" todir="${james3.stage.lib.dir}"></copy>	
		<copy file="${lib.feign-form}" todir="${james3.stage.lib.dir}"></copy>
		<copy file="${lib.feign-form-spring}" todir="${james3.stage.lib.dir}"></copy>
		<copy file="${lib.feign-slf4j}" todir="${james3.stage.lib.dir}"></copy>	
		<copy file="${lib.spring-cloud-openfeign-core}" todir="${james3.stage.lib.dir}"></copy>	
		<copy file="${lib.spring-cloud-commons}" todir="${james3.stage.lib.dir}"></copy>	
		<copy file="${lib.spring-cloud-config-client}" todir="${james3.stage.lib.dir}"></copy>	
		<copy file="${lib.spring-cloud-context}" todir="${james3.stage.lib.dir}"></copy>	
		<copy file="${lib.spring-cloud-stream}" todir="${james3.stage.lib.dir}"></copy>	
		<copy file="${lib.spring-boot}" todir="${james3.stage.lib.dir}"></copy>	
		<copy file="${lib.spring-boot-actuator}" todir="${james3.stage.lib.dir}"></copy>	
		<copy file="${lib.spring-boot-autoconfigure}" todir="${james3.stage.lib.dir}"></copy>	
		<copy file="${lib.spring-retry}" todir="${james3.stage.lib.dir}"></copy>	
		<copy file="${lib.spring-web}" todir="${james3.stage.lib.dir}"></copy>	
		
		<!-- delete the DNS java 2.1.8 file-->
		<delete file="${james3.stage.lib.dir}/dnsjava-2.1.8.jar"></delete>	
		
		<!-- copy the new config files -->
		<copy file="${src}/scripts/james3/domainlist.xml" tofile="${james3.stage.domainlist}" overwrite="true"></copy>
		<copy file="${src}/scripts/james3/mailetcontainer.xml" tofile="${james3.stage.mailetcontainer}" overwrite="true"></copy>
		<copy file="${src}/scripts/james3/pop3server.xml" tofile="${james3.stage.pop3server}" overwrite="true"></copy>		
		<copy file="${src}/scripts/james3/imapserver.xml" tofile="${james3.stage.imapserver}" overwrite="true"></copy>		
		<copy file="${src}/scripts/james3/smtpserver.xml" tofile="${james3.stage.smtpserver}" overwrite="true"></copy>				
		<copy file="${src}/scripts/james3/keystore" tofile="${james3.stage.keystore}" overwrite="true"></copy>		
		<copy file="${src}/scripts/james3/logback.xml" tofile="${james3.stage.logback}" overwrite="true"></copy>				
		<copy file="${src}/scripts/james3/log4j.properties" tofile="${james3.stage.logging}" overwrite="true"></copy>		
		<copy file="${src}/scripts/james3/setdomain.sh" todir="${james3.stage.dir}" overwrite="true"></copy>
		<copy file="${src}/scripts/james3/setdomain.bat" todir="${james3.stage.dir}" overwrite="true"></copy>		
		<copy file="${src}/scripts/james3/set-domain.xml" todir="${james3.stage.dir}" overwrite="true"></copy> 
		<copy file="${src}/scripts/james3/set-domain-domainlist.xsl" todir="${james3.stage.dir}" overwrite="true"></copy> 
		<copy file="${src}/scripts/james3/set-domain-mailetcontainer.xsl" todir="${james3.stage.dir}" overwrite="true"></copy> 
		<copy file="${src}/scripts/james3/james.bat" todir="${james3.stage.dir}" overwrite="true"></copy>	
		<copy file="${src}/scripts/james3/james.sh" todir="${james3.stage.dir}" overwrite="true"></copy>			
		<copy file="${src}/scripts/james3/james-cli.bat" todir="${james3.stage.dir}" overwrite="true"></copy>			
		<copy file="${src}/scripts/james3/james-cli.sh" todir="${james3.stage.dir}" overwrite="true"></copy>	
		<copy file="${src}/scripts/james3/staMailet.properties" todir="${james3.stage.lib.dir}/properties" overwrite="true"></copy> 		
	</target>	
	
	<target name="configure-tomcat">
		<property name="config.service.orig.war" value="config-service-war-8.1.0-.war"></property>
		<property name="config.service.dest.war" value="config-service.war"></property>
		<property name="config.ui.orig.war" value="config-ui-8.1.0.war"></property>
		<property name="config.ui.dest.war" value="config-ui.war"></property>
		<property name="xd.service.orig.war" value="xd-8.1.0.war"></property>
		<property name="xd.service.dest.war" value="xd.war"></property>
		<property name="msg-monitor.service.orig.war" value="direct-msg-monitor-web-8.1.0.war"></property>
		<property name="msg-monitor.service.dest.war" value="msg-monitor.war"></property>		
		
		<!-- Copy war files -->
		<copy file="${install.root.dir}/lib/${config.service.orig.war}" tofile="${tomcat.webapp.dir}/${config.service.dest.war}"></copy>
		<copy file="${install.root.dir}/lib/${config.ui.orig.war}" tofile="${tomcat.webapp.dir}/${config.ui.dest.war}"></copy>
		<copy file="${install.root.dir}/lib/${xd.service.orig.war}" tofile="${tomcat.webapp.dir}/${xd.service.dest.war}"></copy>
		<copy file="${install.root.dir}/lib/${msg-monitor.service.orig.war}" tofile="${tomcat.webapp.dir}/${msg-monitor.service.dest.war}"></copy>
		
	</target>

	<target name="configure-dns">
		<property name="dns.service.orig.jar" value="dns-sboot-8.1.0.jar"></property>
		<property name="dns.service.dest.jar" value="dns-sboot.jar"></property>	
		<mkdir dir="${dnsservices.stage.dir}"></mkdir>
		
		<!-- Copy files -->
		<copy file="${install.root.dir}/lib/${dns.service.orig.jar}" tofile="${dnsservices.stage.dir}/${dns.service.dest.jar}"></copy>
		<copy file="${src}/scripts/dnsServer" tofile="${dnsservices.stage.dir}/dnsServer" overwrite="true"></copy>
		<copy file="${src}/scripts/dnsServer.bat" tofile="${dnsservices.stage.dir}/dnsServer.bat" overwrite="true"></copy>		
		<copy file="${src}/scripts/dnslogback.xml" tofile="${dnsservices.stage.dir}/conf/logback.xml" overwrite="true"></copy>		
	</target>	
	
	<target name="configure-mgmt-console">
		<property name="config.mgmt.console.orig.jar" value="config-manager-8.1.0.jar"></property>
		<property name="config.mgmt.console.dest.jar" value="config-manager.jar"></property>	
		<mkdir dir="${configmgmr.stage.dir}"></mkdir>
		
		<!-- Copy files -->
		<copy file="${install.root.dir}/lib/${config.mgmt.console.orig.jar}" tofile="${configmgmr.stage.dir}/${config.mgmt.console.dest.jar}"></copy>
		<copy file="${src}/scripts/configMgr" tofile="${configmgmr.stage.dir}/configMgr" overwrite="true"></copy>
		<copy file="${src}/scripts/configMgr.bat" tofile="${configmgmr.stage.dir}/configMgr.bat" overwrite="true"></copy>		
		<copy file="${src}/scripts/configmgrlogback.xml" tofile="${configmgmr.stage.dir}/conf/logback.xml" overwrite="true"></copy>		
	</target>	
	
	<!-- make shell files executable -->
	<target name="make-shell-files-executable" if="is.someunix">
		<exec executable="sh">
			<arg line="-c 'cd ${james3.stage.dir}; chmod a+x *.sh'"></arg>
		</exec>				
		<exec executable="sh">
			<arg line="-c 'cd ${tomcat.stage.dir}/bin; chmod a+x *.sh'"></arg>
		</exec>			
		<exec executable="sh">
			<arg line="-c 'cd ${dnsserver.stage.dir}; chmod a+x dnsServer'"></arg>
		</exec>		
		<exec executable="sh">
			<arg line="-c 'cd ${configmgmr.stage.dir}; chmod a+x chmod a+x configMgr'"></arg>
		</exec>				
	</target>

	
	
	<!-- clean up -->
	<target name="clean" depends="init" description="clean up">
	    <!-- Delete the ${build} directory tree -->
	    <delete dir="${build.dir}/download"></delete>
	</target>
	
</project>
